buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = project.mod_version
group = "com.breakinblocks.plonk"
archivesBaseName = "plonk-${mc_version}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: project.mappings_version
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                plonk {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                plonk {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'plonk', '--all',
                    '--existing', '"' + file('src/main/resources/') + '"',
                    '--output', '"' + file('src/generated/resources/') + '"'

            mods {
                plonk {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDirs += 'src/generated/resources/'

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'mod_version', project.mod_version
    inputs.property 'mc_version_range_supported', project.mc_version_range_supported
    inputs.property 'forge_version_range_supported', project.forge_version_range_supported

    // replace stuff in mods.toml, nothing else
    from (sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        // replace mod_version and mc_version and forge_version_major
        expand 'mod_version': "${mod_version}",
                'mc_version_range_supported': "${mc_version_range_supported}",
                'forge_version_range_supported' : "${forge_version_range_supported}"
    }

    // copy everything else except the mods.toml
    from (sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

jar.finalizedBy('reobfJar')
